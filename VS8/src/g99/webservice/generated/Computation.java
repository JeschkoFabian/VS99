
package g99.webservice.generated;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Computation", targetNamespace = "http://vs8.g99/Computation/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Computation {


    /**
     * 
     * @param operand2
     * @param operand1
     * @param op
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Computation", action = "http://vs8.g99/Computation/")
    @WebResult(name = "out", targetNamespace = "")
    @RequestWrapper(localName = "Computation", targetNamespace = "http://vs8.g99/Computation/", className = "g99.webservice.generated.Computation_Type")
    @ResponseWrapper(localName = "ComputationResponse", targetNamespace = "http://vs8.g99/Computation/", className = "g99.webservice.generated.ComputationResponse")
    public String computation(
        @WebParam(name = "op", targetNamespace = "")
        String op,
        @WebParam(name = "operand1", targetNamespace = "")
        double operand1,
        @WebParam(name = "operand2", targetNamespace = "")
        double operand2);

}
